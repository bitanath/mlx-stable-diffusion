import torch
from mlx import nn
from mlx import core as mx
from .array import get_query_projection,get_submodule

def load_clip_lora(mlx_clip:nn.Module,lora_state_dict:dict,lora_mapping:dict,alpha:float=1.0,verbose:bool=False):
    for key,value in lora_mapping.items():
        if "[" in key:
            order = [get_query_projection(val[0]) for val in value] #required order is q,k,v
            all_pair_keys = [value[order.index("q")],value[order.index("k")],value[order.index("v")]]
            verbose and print(all_pair_keys)
            tensors = []
            for pair_keys in all_pair_keys:
                weight_up = lora_state_dict.get(pair_keys[0]).to(torch.float32)
                weight_down = lora_state_dict.get(pair_keys[1]).to(torch.float32)
                multiplied = alpha * torch.mm(weight_up, weight_down)
                tensors.append(multiplied)
            modified_key = key.replace("[","").replace("]","")
            mlx_submodule = get_submodule(mlx_clip,modified_key)
            verbose and print("Appending lora attention to clip",mlx_submodule.weight.shape,"by multiplying",torch.cat(tensors).shape)
            mlx_submodule.weight += mx.array(alpha * torch.cat(tensors)) #add to the merged state dict after concatenating

        else:
            pair_keys = value
            mlx_submodule = get_submodule(mlx_clip,key)
            verbose and print("Appending lora attention to clip",mlx_submodule.weight.shape)
            if len(lora_state_dict.get(pair_keys[0]).shape) == 4:
                weight_up = lora_state_dict.get(pair_keys[0]).squeeze(3).squeeze(2).to(torch.float32)
                weight_down = lora_state_dict.get(pair_keys[1]).squeeze(3).squeeze(2).to(torch.float32)
                mlx_submodule.weight += mx.array(alpha * torch.mm(weight_up, weight_down).unsqueeze(2).unsqueeze(3))
                verbose and print("Appended lora layer to clip after unsqueeze",mlx_submodule.weight.shape,"by multiplying",weight_up.shape,weight_down.shape)
            else:
                weight_up = lora_state_dict.get(pair_keys[0]).to(torch.float32)
                weight_down = lora_state_dict.get(pair_keys[1]).to(torch.float32)
                mlx_submodule.weight += mx.array(alpha * torch.mm(weight_up, weight_down))
                verbose and print("Appended lora layer to clip",mlx_submodule.weight.shape,"by multiplying",weight_up.shape,weight_down.shape)

    return mlx_clip

def load_unet_lora(mlx_diffusion:nn.Module,lora_state_dict:dict,lora_mapping:dict,alpha:float=1.0,verbose:bool=False):
    for key,value in lora_mapping.items():
        if "[" in key:
            order = [get_query_projection(val[0]) for val in value] #required order is q,k,v
            all_pair_keys = [value[order.index("q")],value[order.index("k")],value[order.index("v")]]
            verbose and print(all_pair_keys)
            tensors = []
            for pair_keys in all_pair_keys:
                weight_up = lora_state_dict.get(pair_keys[0]).to(torch.float32)
                weight_down = lora_state_dict.get(pair_keys[1]).to(torch.float32)
                multiplied = alpha * torch.mm(weight_up, weight_down)
                tensors.append(multiplied)
            modified_key = key.replace("[","").replace("]","")
            mlx_submodule = get_submodule(mlx_diffusion,modified_key)
            verbose and print("Appending lora attention to clip",mlx_submodule.weight.shape,"by multiplying",torch.cat(tensors).shape)
            mlx_submodule.weight += mx.array(alpha * torch.cat(tensors)) #add to the merged state dict after concatenating
        else:
            pair_keys = value
            mlx_submodule = get_submodule(mlx_diffusion,key)
            verbose and print("Appending lora attention to clip",mlx_submodule.weight.shape)
            if len(lora_state_dict.get(pair_keys[0]).shape) == 4:
                weight_up = lora_state_dict.get(pair_keys[0]).squeeze(3).squeeze(2).to(torch.float32)
                weight_down = lora_state_dict.get(pair_keys[1]).squeeze(3).squeeze(2).to(torch.float32)
                if "conv" in key:
                    #NOTE: Convolutional layers need to be transposed since Pytorch is NHWC while MLX is NCHW
                    mlx_submodule.weight += mx.array(alpha * torch.mm(weight_up, weight_down).unsqueeze(2).unsqueeze(3).permute(0,2,3,1))
                else:
                    mlx_submodule.weight += mx.array(alpha * torch.mm(weight_up, weight_down).unsqueeze(2).unsqueeze(3))
                verbose and print("Appended lora layer to clip after unsqueeze",mlx_submodule.weight.shape,"by multiplying",weight_up.shape,weight_down.shape)
            else:
                weight_up = lora_state_dict.get(pair_keys[0]).to(torch.float32)
                weight_down = lora_state_dict.get(pair_keys[1]).to(torch.float32)
                mlx_submodule.weight += mx.array(alpha * torch.mm(weight_up, weight_down))
                verbose and print("Appended lora layer to clip",mlx_submodule.weight.shape,"by multiplying",weight_up.shape,weight_down.shape)

    return mlx_diffusion

def load_decoder_weights(decoder:nn.Module,original_state_dict:dict):
    decoder.decoder_layers[1].weight = mx.array(original_state_dict['1.weight'].permute(0,2,3,1))
    decoder.decoder_layers[1].bias = mx.array(original_state_dict['1.bias'])
    decoder.decoder_layers[3].conv[0].weight = mx.array(original_state_dict['3.conv.0.weight'].permute(0,2,3,1))
    decoder.decoder_layers[3].conv[0].bias = mx.array(original_state_dict['3.conv.0.bias'])
    decoder.decoder_layers[3].conv[2].weight = mx.array(original_state_dict['3.conv.2.weight'].permute(0,2,3,1))
    decoder.decoder_layers[3].conv[2].bias = mx.array(original_state_dict['3.conv.2.bias'])
    decoder.decoder_layers[3].conv[4].weight = mx.array(original_state_dict['3.conv.4.weight'].permute(0,2,3,1))
    decoder.decoder_layers[3].conv[4].bias = mx.array(original_state_dict['3.conv.4.bias'])
    decoder.decoder_layers[4].conv[0].weight = mx.array(original_state_dict['4.conv.0.weight'].permute(0,2,3,1))
    decoder.decoder_layers[4].conv[0].bias = mx.array(original_state_dict['4.conv.0.bias'])
    decoder.decoder_layers[4].conv[2].weight = mx.array(original_state_dict['4.conv.2.weight'].permute(0,2,3,1))
    decoder.decoder_layers[4].conv[2].bias = mx.array(original_state_dict['4.conv.2.bias'])
    decoder.decoder_layers[4].conv[4].weight = mx.array(original_state_dict['4.conv.4.weight'].permute(0,2,3,1))
    decoder.decoder_layers[4].conv[4].bias = mx.array(original_state_dict['4.conv.4.bias'])
    decoder.decoder_layers[5].conv[0].weight = mx.array(original_state_dict['5.conv.0.weight'].permute(0,2,3,1))
    decoder.decoder_layers[5].conv[0].bias = mx.array(original_state_dict['5.conv.0.bias'])
    decoder.decoder_layers[5].conv[2].weight = mx.array(original_state_dict['5.conv.2.weight'].permute(0,2,3,1))
    decoder.decoder_layers[5].conv[2].bias = mx.array(original_state_dict['5.conv.2.bias'])
    decoder.decoder_layers[5].conv[4].weight = mx.array(original_state_dict['5.conv.4.weight'].permute(0,2,3,1))
    decoder.decoder_layers[5].conv[4].bias = mx.array(original_state_dict['5.conv.4.bias'])
    decoder.decoder_layers[7].weight = mx.array(original_state_dict['7.weight'].permute(0,2,3,1))
    decoder.decoder_layers[8].conv[0].weight = mx.array(original_state_dict['8.conv.0.weight'].permute(0,2,3,1))
    decoder.decoder_layers[8].conv[0].bias = mx.array(original_state_dict['8.conv.0.bias'])
    decoder.decoder_layers[8].conv[2].weight = mx.array(original_state_dict['8.conv.2.weight'].permute(0,2,3,1))
    decoder.decoder_layers[8].conv[2].bias = mx.array(original_state_dict['8.conv.2.bias'])
    decoder.decoder_layers[8].conv[4].weight = mx.array(original_state_dict['8.conv.4.weight'].permute(0,2,3,1))
    decoder.decoder_layers[8].conv[4].bias = mx.array(original_state_dict['8.conv.4.bias'])
    decoder.decoder_layers[9].conv[0].weight = mx.array(original_state_dict['9.conv.0.weight'].permute(0,2,3,1))
    decoder.decoder_layers[9].conv[0].bias = mx.array(original_state_dict['9.conv.0.bias'])
    decoder.decoder_layers[9].conv[2].weight = mx.array(original_state_dict['9.conv.2.weight'].permute(0,2,3,1))
    decoder.decoder_layers[9].conv[2].bias = mx.array(original_state_dict['9.conv.2.bias'])
    decoder.decoder_layers[9].conv[4].weight = mx.array(original_state_dict['9.conv.4.weight'].permute(0,2,3,1))
    decoder.decoder_layers[9].conv[4].bias = mx.array(original_state_dict['9.conv.4.bias'])
    decoder.decoder_layers[10].conv[0].weight = mx.array(original_state_dict['10.conv.0.weight'].permute(0,2,3,1))
    decoder.decoder_layers[10].conv[0].bias = mx.array(original_state_dict['10.conv.0.bias'])
    decoder.decoder_layers[10].conv[2].weight = mx.array(original_state_dict['10.conv.2.weight'].permute(0,2,3,1))
    decoder.decoder_layers[10].conv[2].bias = mx.array(original_state_dict['10.conv.2.bias'])
    decoder.decoder_layers[10].conv[4].weight = mx.array(original_state_dict['10.conv.4.weight'].permute(0,2,3,1))
    decoder.decoder_layers[10].conv[4].bias = mx.array(original_state_dict['10.conv.4.bias'])
    decoder.decoder_layers[12].weight = mx.array(original_state_dict['12.weight'].permute(0,2,3,1))
    decoder.decoder_layers[13].conv[0].weight = mx.array(original_state_dict['13.conv.0.weight'].permute(0,2,3,1))
    decoder.decoder_layers[13].conv[0].bias = mx.array(original_state_dict['13.conv.0.bias'])
    decoder.decoder_layers[13].conv[2].weight = mx.array(original_state_dict['13.conv.2.weight'].permute(0,2,3,1))
    decoder.decoder_layers[13].conv[2].bias = mx.array(original_state_dict['13.conv.2.bias'])
    decoder.decoder_layers[13].conv[4].weight = mx.array(original_state_dict['13.conv.4.weight'].permute(0,2,3,1))
    decoder.decoder_layers[13].conv[4].bias = mx.array(original_state_dict['13.conv.4.bias'])
    decoder.decoder_layers[14].conv[0].weight = mx.array(original_state_dict['14.conv.0.weight'].permute(0,2,3,1))
    decoder.decoder_layers[14].conv[0].bias = mx.array(original_state_dict['14.conv.0.bias'])
    decoder.decoder_layers[14].conv[2].weight = mx.array(original_state_dict['14.conv.2.weight'].permute(0,2,3,1))
    decoder.decoder_layers[14].conv[2].bias = mx.array(original_state_dict['14.conv.2.bias'])
    decoder.decoder_layers[14].conv[4].weight = mx.array(original_state_dict['14.conv.4.weight'].permute(0,2,3,1))
    decoder.decoder_layers[14].conv[4].bias = mx.array(original_state_dict['14.conv.4.bias'])
    decoder.decoder_layers[15].conv[0].weight = mx.array(original_state_dict['15.conv.0.weight'].permute(0,2,3,1))
    decoder.decoder_layers[15].conv[0].bias = mx.array(original_state_dict['15.conv.0.bias'])
    decoder.decoder_layers[15].conv[2].weight = mx.array(original_state_dict['15.conv.2.weight'].permute(0,2,3,1))
    decoder.decoder_layers[15].conv[2].bias = mx.array(original_state_dict['15.conv.2.bias'])
    decoder.decoder_layers[15].conv[4].weight = mx.array(original_state_dict['15.conv.4.weight'].permute(0,2,3,1))
    decoder.decoder_layers[15].conv[4].bias = mx.array(original_state_dict['15.conv.4.bias'])
    decoder.decoder_layers[17].weight = mx.array(original_state_dict['17.weight'].permute(0,2,3,1))
    decoder.decoder_layers[18].conv[0].weight = mx.array(original_state_dict['18.conv.0.weight'].permute(0,2,3,1))
    decoder.decoder_layers[18].conv[0].bias = mx.array(original_state_dict['18.conv.0.bias'])
    decoder.decoder_layers[18].conv[2].weight = mx.array(original_state_dict['18.conv.2.weight'].permute(0,2,3,1))
    decoder.decoder_layers[18].conv[2].bias = mx.array(original_state_dict['18.conv.2.bias'])
    decoder.decoder_layers[18].conv[4].weight = mx.array(original_state_dict['18.conv.4.weight'].permute(0,2,3,1))
    decoder.decoder_layers[18].conv[4].bias = mx.array(original_state_dict['18.conv.4.bias'])
    decoder.decoder_layers[19].weight = mx.array(original_state_dict['19.weight'].permute(0,2,3,1))
    decoder.decoder_layers[19].bias = mx.array(original_state_dict['19.bias'])
    return decoder.eval()

def load_encoder_weights(encoder:nn.Module,original_state_dict:dict):
    encoder.encoder_layers[0].weight = mx.array(original_state_dict['0.weight'].permute(0,2,3,1))
    encoder.encoder_layers[0].bias = mx.array(original_state_dict['0.bias'])
    encoder.encoder_layers[1].conv[0].weight = mx.array(original_state_dict['1.conv.0.weight'].permute(0,2,3,1))
    encoder.encoder_layers[1].conv[0].bias = mx.array(original_state_dict['1.conv.0.bias'])
    encoder.encoder_layers[1].conv[2].weight = mx.array(original_state_dict['1.conv.2.weight'].permute(0,2,3,1))
    encoder.encoder_layers[1].conv[2].bias = mx.array(original_state_dict['1.conv.2.bias'])
    encoder.encoder_layers[1].conv[4].weight = mx.array(original_state_dict['1.conv.4.weight'].permute(0,2,3,1))
    encoder.encoder_layers[1].conv[4].bias = mx.array(original_state_dict['1.conv.4.bias'])
    encoder.encoder_layers[2].weight = mx.array(original_state_dict['2.weight'].permute(0,2,3,1))
    encoder.encoder_layers[3].conv[0].weight = mx.array(original_state_dict['3.conv.0.weight'].permute(0,2,3,1))
    encoder.encoder_layers[3].conv[0].bias = mx.array(original_state_dict['3.conv.0.bias'])
    encoder.encoder_layers[3].conv[2].weight = mx.array(original_state_dict['3.conv.2.weight'].permute(0,2,3,1))
    encoder.encoder_layers[3].conv[2].bias = mx.array(original_state_dict['3.conv.2.bias'])
    encoder.encoder_layers[3].conv[4].weight = mx.array(original_state_dict['3.conv.4.weight'].permute(0,2,3,1))
    encoder.encoder_layers[3].conv[4].bias = mx.array(original_state_dict['3.conv.4.bias'])
    encoder.encoder_layers[4].conv[0].weight = mx.array(original_state_dict['4.conv.0.weight'].permute(0,2,3,1))
    encoder.encoder_layers[4].conv[0].bias = mx.array(original_state_dict['4.conv.0.bias'])
    encoder.encoder_layers[4].conv[2].weight = mx.array(original_state_dict['4.conv.2.weight'].permute(0,2,3,1))
    encoder.encoder_layers[4].conv[2].bias = mx.array(original_state_dict['4.conv.2.bias'])
    encoder.encoder_layers[4].conv[4].weight = mx.array(original_state_dict['4.conv.4.weight'].permute(0,2,3,1))
    encoder.encoder_layers[4].conv[4].bias = mx.array(original_state_dict['4.conv.4.bias'])
    encoder.encoder_layers[5].conv[0].weight = mx.array(original_state_dict['5.conv.0.weight'].permute(0,2,3,1))
    encoder.encoder_layers[5].conv[0].bias = mx.array(original_state_dict['5.conv.0.bias'])
    encoder.encoder_layers[5].conv[2].weight = mx.array(original_state_dict['5.conv.2.weight'].permute(0,2,3,1))
    encoder.encoder_layers[5].conv[2].bias = mx.array(original_state_dict['5.conv.2.bias'])
    encoder.encoder_layers[5].conv[4].weight = mx.array(original_state_dict['5.conv.4.weight'].permute(0,2,3,1))
    encoder.encoder_layers[5].conv[4].bias = mx.array(original_state_dict['5.conv.4.bias'])
    encoder.encoder_layers[6].weight = mx.array(original_state_dict['6.weight'].permute(0,2,3,1))
    encoder.encoder_layers[7].conv[0].weight = mx.array(original_state_dict['7.conv.0.weight'].permute(0,2,3,1))
    encoder.encoder_layers[7].conv[0].bias = mx.array(original_state_dict['7.conv.0.bias'])
    encoder.encoder_layers[7].conv[2].weight = mx.array(original_state_dict['7.conv.2.weight'].permute(0,2,3,1))
    encoder.encoder_layers[7].conv[2].bias = mx.array(original_state_dict['7.conv.2.bias'])
    encoder.encoder_layers[7].conv[4].weight = mx.array(original_state_dict['7.conv.4.weight'].permute(0,2,3,1))
    encoder.encoder_layers[7].conv[4].bias = mx.array(original_state_dict['7.conv.4.bias'])
    encoder.encoder_layers[8].conv[0].weight = mx.array(original_state_dict['8.conv.0.weight'].permute(0,2,3,1))
    encoder.encoder_layers[8].conv[0].bias = mx.array(original_state_dict['8.conv.0.bias'])
    encoder.encoder_layers[8].conv[2].weight = mx.array(original_state_dict['8.conv.2.weight'].permute(0,2,3,1))
    encoder.encoder_layers[8].conv[2].bias = mx.array(original_state_dict['8.conv.2.bias'])
    encoder.encoder_layers[8].conv[4].weight = mx.array(original_state_dict['8.conv.4.weight'].permute(0,2,3,1))
    encoder.encoder_layers[8].conv[4].bias = mx.array(original_state_dict['8.conv.4.bias'])
    encoder.encoder_layers[9].conv[0].weight = mx.array(original_state_dict['9.conv.0.weight'].permute(0,2,3,1))
    encoder.encoder_layers[9].conv[0].bias = mx.array(original_state_dict['9.conv.0.bias'])
    encoder.encoder_layers[9].conv[2].weight = mx.array(original_state_dict['9.conv.2.weight'].permute(0,2,3,1))
    encoder.encoder_layers[9].conv[2].bias = mx.array(original_state_dict['9.conv.2.bias'])
    encoder.encoder_layers[9].conv[4].weight = mx.array(original_state_dict['9.conv.4.weight'].permute(0,2,3,1))
    encoder.encoder_layers[9].conv[4].bias = mx.array(original_state_dict['9.conv.4.bias'])
    encoder.encoder_layers[10].weight = mx.array(original_state_dict['10.weight'].permute(0,2,3,1))
    encoder.encoder_layers[11].conv[0].weight = mx.array(original_state_dict['11.conv.0.weight'].permute(0,2,3,1))
    encoder.encoder_layers[11].conv[0].bias = mx.array(original_state_dict['11.conv.0.bias'])
    encoder.encoder_layers[11].conv[2].weight = mx.array(original_state_dict['11.conv.2.weight'].permute(0,2,3,1))
    encoder.encoder_layers[11].conv[2].bias = mx.array(original_state_dict['11.conv.2.bias'])
    encoder.encoder_layers[11].conv[4].weight = mx.array(original_state_dict['11.conv.4.weight'].permute(0,2,3,1))
    encoder.encoder_layers[11].conv[4].bias = mx.array(original_state_dict['11.conv.4.bias'])
    encoder.encoder_layers[12].conv[0].weight = mx.array(original_state_dict['12.conv.0.weight'].permute(0,2,3,1))
    encoder.encoder_layers[12].conv[0].bias = mx.array(original_state_dict['12.conv.0.bias'])
    encoder.encoder_layers[12].conv[2].weight = mx.array(original_state_dict['12.conv.2.weight'].permute(0,2,3,1))
    encoder.encoder_layers[12].conv[2].bias = mx.array(original_state_dict['12.conv.2.bias'])
    encoder.encoder_layers[12].conv[4].weight = mx.array(original_state_dict['12.conv.4.weight'].permute(0,2,3,1))
    encoder.encoder_layers[12].conv[4].bias = mx.array(original_state_dict['12.conv.4.bias'])
    encoder.encoder_layers[13].conv[0].weight = mx.array(original_state_dict['13.conv.0.weight'].permute(0,2,3,1))
    encoder.encoder_layers[13].conv[0].bias = mx.array(original_state_dict['13.conv.0.bias'])
    encoder.encoder_layers[13].conv[2].weight = mx.array(original_state_dict['13.conv.2.weight'].permute(0,2,3,1))
    encoder.encoder_layers[13].conv[2].bias = mx.array(original_state_dict['13.conv.2.bias'])
    encoder.encoder_layers[13].conv[4].weight = mx.array(original_state_dict['13.conv.4.weight'].permute(0,2,3,1))
    encoder.encoder_layers[13].conv[4].bias = mx.array(original_state_dict['13.conv.4.bias'])
    encoder.encoder_layers[14].weight = mx.array(original_state_dict['14.weight'].permute(0,2,3,1))
    encoder.encoder_layers[14].bias = mx.array(original_state_dict['14.bias'])  
    return encoder.eval()

def load_clip_weights(mlx_clip:nn.Module,original_state_dict:dict):
    #NOTE: Prefer a manual mapping now, replace with mlx.array.get_submodule based mapping when confident enough
    mlx_clip.embedding.token_embedding.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.embeddings.token_embedding.weight'])
    mlx_clip.embedding.position_embedding =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.embeddings.position_embedding.weight'])
    mlx_clip.layers[0].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.self_attn.out_proj.weight'])
    mlx_clip.layers[0].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.self_attn.out_proj.bias'])
    mlx_clip.layers[0].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.layer_norm1.weight'])
    mlx_clip.layers[0].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.layer_norm1.bias'])
    mlx_clip.layers[0].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.mlp.fc1.weight'])
    mlx_clip.layers[0].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.mlp.fc1.bias'])
    mlx_clip.layers[0].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.mlp.fc2.weight'])
    mlx_clip.layers[0].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.mlp.fc2.bias'])
    mlx_clip.layers[0].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.layer_norm2.weight'])
    mlx_clip.layers[0].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.layer_norm2.bias'])
    mlx_clip.layers[1].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.self_attn.out_proj.weight'])
    mlx_clip.layers[1].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.self_attn.out_proj.bias'])
    mlx_clip.layers[1].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.layer_norm1.weight'])
    mlx_clip.layers[1].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.layer_norm1.bias'])
    mlx_clip.layers[1].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.mlp.fc1.weight'])
    mlx_clip.layers[1].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.mlp.fc1.bias'])
    mlx_clip.layers[1].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.mlp.fc2.weight'])
    mlx_clip.layers[1].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.mlp.fc2.bias'])
    mlx_clip.layers[1].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.layer_norm2.weight'])
    mlx_clip.layers[1].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.layer_norm2.bias'])
    mlx_clip.layers[2].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.self_attn.out_proj.weight'])
    mlx_clip.layers[2].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.self_attn.out_proj.bias'])
    mlx_clip.layers[2].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.layer_norm1.weight'])
    mlx_clip.layers[2].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.layer_norm1.bias'])
    mlx_clip.layers[2].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.mlp.fc1.weight'])
    mlx_clip.layers[2].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.mlp.fc1.bias'])
    mlx_clip.layers[2].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.mlp.fc2.weight'])
    mlx_clip.layers[2].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.mlp.fc2.bias'])
    mlx_clip.layers[2].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.layer_norm2.weight'])
    mlx_clip.layers[2].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.layer_norm2.bias'])
    mlx_clip.layers[3].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.self_attn.out_proj.weight'])
    mlx_clip.layers[3].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.self_attn.out_proj.bias'])
    mlx_clip.layers[3].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.layer_norm1.weight'])
    mlx_clip.layers[3].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.layer_norm1.bias'])
    mlx_clip.layers[3].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.mlp.fc1.weight'])
    mlx_clip.layers[3].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.mlp.fc1.bias'])
    mlx_clip.layers[3].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.mlp.fc2.weight'])
    mlx_clip.layers[3].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.mlp.fc2.bias'])
    mlx_clip.layers[3].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.layer_norm2.weight'])
    mlx_clip.layers[3].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.layer_norm2.bias'])
    mlx_clip.layers[4].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.self_attn.out_proj.weight'])
    mlx_clip.layers[4].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.self_attn.out_proj.bias'])
    mlx_clip.layers[4].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.layer_norm1.weight'])
    mlx_clip.layers[4].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.layer_norm1.bias'])
    mlx_clip.layers[4].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.mlp.fc1.weight'])
    mlx_clip.layers[4].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.mlp.fc1.bias'])
    mlx_clip.layers[4].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.mlp.fc2.weight'])
    mlx_clip.layers[4].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.mlp.fc2.bias'])
    mlx_clip.layers[4].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.layer_norm2.weight'])
    mlx_clip.layers[4].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.layer_norm2.bias'])
    mlx_clip.layers[5].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.self_attn.out_proj.weight'])
    mlx_clip.layers[5].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.self_attn.out_proj.bias'])
    mlx_clip.layers[5].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.layer_norm1.weight'])
    mlx_clip.layers[5].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.layer_norm1.bias'])
    mlx_clip.layers[5].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.mlp.fc1.weight'])
    mlx_clip.layers[5].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.mlp.fc1.bias'])
    mlx_clip.layers[5].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.mlp.fc2.weight'])
    mlx_clip.layers[5].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.mlp.fc2.bias'])
    mlx_clip.layers[5].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.layer_norm2.weight'])
    mlx_clip.layers[5].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.layer_norm2.bias'])
    mlx_clip.layers[6].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.self_attn.out_proj.weight'])
    mlx_clip.layers[6].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.self_attn.out_proj.bias'])
    mlx_clip.layers[6].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.layer_norm1.weight'])
    mlx_clip.layers[6].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.layer_norm1.bias'])
    mlx_clip.layers[6].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.mlp.fc1.weight'])
    mlx_clip.layers[6].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.mlp.fc1.bias'])
    mlx_clip.layers[6].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.mlp.fc2.weight'])
    mlx_clip.layers[6].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.mlp.fc2.bias'])
    mlx_clip.layers[6].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.layer_norm2.weight'])
    mlx_clip.layers[6].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.layer_norm2.bias'])
    mlx_clip.layers[7].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.self_attn.out_proj.weight'])
    mlx_clip.layers[7].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.self_attn.out_proj.bias'])
    mlx_clip.layers[7].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.layer_norm1.weight'])
    mlx_clip.layers[7].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.layer_norm1.bias'])
    mlx_clip.layers[7].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.mlp.fc1.weight'])
    mlx_clip.layers[7].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.mlp.fc1.bias'])
    mlx_clip.layers[7].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.mlp.fc2.weight'])
    mlx_clip.layers[7].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.mlp.fc2.bias'])
    mlx_clip.layers[7].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.layer_norm2.weight'])
    mlx_clip.layers[7].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.layer_norm2.bias'])
    mlx_clip.layers[8].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.self_attn.out_proj.weight'])
    mlx_clip.layers[8].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.self_attn.out_proj.bias'])
    mlx_clip.layers[8].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.layer_norm1.weight'])
    mlx_clip.layers[8].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.layer_norm1.bias'])
    mlx_clip.layers[8].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.mlp.fc1.weight'])
    mlx_clip.layers[8].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.mlp.fc1.bias'])
    mlx_clip.layers[8].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.mlp.fc2.weight'])
    mlx_clip.layers[8].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.mlp.fc2.bias'])
    mlx_clip.layers[8].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.layer_norm2.weight'])
    mlx_clip.layers[8].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.layer_norm2.bias'])
    mlx_clip.layers[9].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.self_attn.out_proj.weight'])
    mlx_clip.layers[9].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.self_attn.out_proj.bias'])
    mlx_clip.layers[9].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.layer_norm1.weight'])
    mlx_clip.layers[9].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.layer_norm1.bias'])
    mlx_clip.layers[9].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.mlp.fc1.weight'])
    mlx_clip.layers[9].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.mlp.fc1.bias'])
    mlx_clip.layers[9].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.mlp.fc2.weight'])
    mlx_clip.layers[9].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.mlp.fc2.bias'])
    mlx_clip.layers[9].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.layer_norm2.weight'])
    mlx_clip.layers[9].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.layer_norm2.bias'])
    mlx_clip.layers[10].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.self_attn.out_proj.weight'])
    mlx_clip.layers[10].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.self_attn.out_proj.bias'])
    mlx_clip.layers[10].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.layer_norm1.weight'])
    mlx_clip.layers[10].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.layer_norm1.bias'])
    mlx_clip.layers[10].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.mlp.fc1.weight'])
    mlx_clip.layers[10].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.mlp.fc1.bias'])
    mlx_clip.layers[10].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.mlp.fc2.weight'])
    mlx_clip.layers[10].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.mlp.fc2.bias'])
    mlx_clip.layers[10].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.layer_norm2.weight'])
    mlx_clip.layers[10].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.layer_norm2.bias'])
    mlx_clip.layers[11].attention.out_proj.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.self_attn.out_proj.weight'])
    mlx_clip.layers[11].attention.out_proj.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.self_attn.out_proj.bias'])
    mlx_clip.layers[11].layernorm_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.layer_norm1.weight'])
    mlx_clip.layers[11].layernorm_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.layer_norm1.bias'])
    mlx_clip.layers[11].linear_1.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.mlp.fc1.weight'])
    mlx_clip.layers[11].linear_1.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.mlp.fc1.bias'])
    mlx_clip.layers[11].linear_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.mlp.fc2.weight'])
    mlx_clip.layers[11].linear_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.mlp.fc2.bias'])
    mlx_clip.layers[11].layernorm_2.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.layer_norm2.weight'])
    mlx_clip.layers[11].layernorm_2.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.layer_norm2.bias'])
    mlx_clip.layernorm.weight =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.final_layer_norm.weight'])
    mlx_clip.layernorm.bias =  mx.array(original_state_dict['cond_stage_model.transformer.text_model.final_layer_norm.bias'])
    mlx_clip.layers[0].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[0].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.0.self_attn.v_proj.bias']), 0))
    mlx_clip.layers[1].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[1].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.1.self_attn.v_proj.bias']), 0))
    mlx_clip.layers[2].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[2].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.2.self_attn.v_proj.bias']), 0))
    mlx_clip.layers[3].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[3].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.3.self_attn.v_proj.bias']), 0))
    mlx_clip.layers[4].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[4].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.4.self_attn.v_proj.bias']), 0))
    mlx_clip.layers[5].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[5].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.5.self_attn.v_proj.bias']), 0))
    mlx_clip.layers[6].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[6].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.6.self_attn.v_proj.bias']), 0))
    mlx_clip.layers[7].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[7].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.7.self_attn.v_proj.bias']), 0))
    mlx_clip.layers[8].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[8].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.8.self_attn.v_proj.bias']), 0))
    mlx_clip.layers[9].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[9].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.9.self_attn.v_proj.bias']), 0))
    mlx_clip.layers[10].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[10].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.10.self_attn.v_proj.bias']), 0))
    mlx_clip.layers[11].attention.in_proj.weight = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.self_attn.q_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.self_attn.k_proj.weight'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.self_attn.v_proj.weight']), 0))
    mlx_clip.layers[11].attention.in_proj.bias = mx.array(torch.cat((original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.self_attn.q_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.self_attn.k_proj.bias'], original_state_dict['cond_stage_model.transformer.text_model.encoder.layers.11.self_attn.v_proj.bias']), 0))
    return mlx_clip.eval()


def load_unet_weights(mlx_diffusion:nn.Module,original_state_dict:dict):
    #TODO: load weights via heuristic rather than manually when can be done algorithmically
    mlx_diffusion.time_embedding.linear_1.weight = mx.array(original_state_dict['model.diffusion_model.time_embed.0.weight'])
    mlx_diffusion.time_embedding.linear_1.bias = mx.array(original_state_dict['model.diffusion_model.time_embed.0.bias'])
    mlx_diffusion.time_embedding.linear_2.weight = mx.array(original_state_dict['model.diffusion_model.time_embed.2.weight'])
    mlx_diffusion.time_embedding.linear_2.bias = mx.array(original_state_dict['model.diffusion_model.time_embed.2.bias'])
    mlx_diffusion.unet.encoders[0].layers[0].weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.0.0.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[0].layers[0].bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.0.0.bias'])
    mlx_diffusion.unet.encoders[1].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.0.in_layers.0.weight'])
    mlx_diffusion.unet.encoders[1].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.0.in_layers.0.bias'])
    mlx_diffusion.unet.encoders[1].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[1].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.0.in_layers.2.bias'])
    mlx_diffusion.unet.encoders[1].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.0.emb_layers.1.weight'])
    mlx_diffusion.unet.encoders[1].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.0.emb_layers.1.bias'])
    mlx_diffusion.unet.encoders[1].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.0.out_layers.0.weight'])
    mlx_diffusion.unet.encoders[1].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.0.out_layers.0.bias'])
    mlx_diffusion.unet.encoders[1].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[1].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.0.out_layers.3.bias'])
    mlx_diffusion.unet.encoders[1].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.norm.weight'])
    mlx_diffusion.unet.encoders[1].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.norm.bias'])
    mlx_diffusion.unet.encoders[1].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[1].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.proj_in.bias'])
    mlx_diffusion.unet.encoders[1].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.encoders[1].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.encoders[1].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.encoders[1].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.encoders[1].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.encoders[1].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.encoders[1].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.encoders[1].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.encoders[1].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.encoders[1].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.encoders[1].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.encoders[1].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.encoders[1].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.encoders[1].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.encoders[1].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.encoders[1].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.encoders[1].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.encoders[1].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[1].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.1.1.proj_out.bias'])
    mlx_diffusion.unet.encoders[2].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.0.in_layers.0.weight'])
    mlx_diffusion.unet.encoders[2].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.0.in_layers.0.bias'])
    mlx_diffusion.unet.encoders[2].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[2].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.0.in_layers.2.bias'])
    mlx_diffusion.unet.encoders[2].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.0.emb_layers.1.weight'])
    mlx_diffusion.unet.encoders[2].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.0.emb_layers.1.bias'])
    mlx_diffusion.unet.encoders[2].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.0.out_layers.0.weight'])
    mlx_diffusion.unet.encoders[2].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.0.out_layers.0.bias'])
    mlx_diffusion.unet.encoders[2].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[2].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.0.out_layers.3.bias'])
    mlx_diffusion.unet.encoders[2].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.norm.weight'])
    mlx_diffusion.unet.encoders[2].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.norm.bias'])
    mlx_diffusion.unet.encoders[2].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[2].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.proj_in.bias'])
    mlx_diffusion.unet.encoders[2].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.encoders[2].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.encoders[2].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.encoders[2].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.encoders[2].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.encoders[2].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.encoders[2].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.encoders[2].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.encoders[2].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.encoders[2].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.encoders[2].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.encoders[2].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.encoders[2].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.encoders[2].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.encoders[2].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.encoders[2].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.encoders[2].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.encoders[2].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[2].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.2.1.proj_out.bias'])
    mlx_diffusion.unet.encoders[3].layers[0].weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.3.0.op.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[3].layers[0].bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.3.0.op.bias'])
    mlx_diffusion.unet.encoders[4].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.in_layers.0.weight'])
    mlx_diffusion.unet.encoders[4].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.in_layers.0.bias'])
    mlx_diffusion.unet.encoders[4].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[4].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.in_layers.2.bias'])
    mlx_diffusion.unet.encoders[4].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.emb_layers.1.weight'])
    mlx_diffusion.unet.encoders[4].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.emb_layers.1.bias'])
    mlx_diffusion.unet.encoders[4].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.out_layers.0.weight'])
    mlx_diffusion.unet.encoders[4].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.out_layers.0.bias'])
    mlx_diffusion.unet.encoders[4].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[4].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.out_layers.3.bias'])
    mlx_diffusion.unet.encoders[4].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[4].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.0.skip_connection.bias'])
    mlx_diffusion.unet.encoders[4].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.norm.weight'])
    mlx_diffusion.unet.encoders[4].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.norm.bias'])
    mlx_diffusion.unet.encoders[4].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[4].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.proj_in.bias'])
    mlx_diffusion.unet.encoders[4].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.encoders[4].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.encoders[4].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.encoders[4].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.encoders[4].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.encoders[4].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.encoders[4].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.encoders[4].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.encoders[4].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.encoders[4].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.encoders[4].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.encoders[4].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.encoders[4].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.encoders[4].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.encoders[4].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.encoders[4].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.encoders[4].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.encoders[4].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[4].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.4.1.proj_out.bias'])
    mlx_diffusion.unet.encoders[5].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.0.in_layers.0.weight'])
    mlx_diffusion.unet.encoders[5].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.0.in_layers.0.bias'])
    mlx_diffusion.unet.encoders[5].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[5].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.0.in_layers.2.bias'])
    mlx_diffusion.unet.encoders[5].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.0.emb_layers.1.weight'])
    mlx_diffusion.unet.encoders[5].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.0.emb_layers.1.bias'])
    mlx_diffusion.unet.encoders[5].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.0.out_layers.0.weight'])
    mlx_diffusion.unet.encoders[5].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.0.out_layers.0.bias'])
    mlx_diffusion.unet.encoders[5].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[5].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.0.out_layers.3.bias'])
    mlx_diffusion.unet.encoders[5].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.norm.weight'])
    mlx_diffusion.unet.encoders[5].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.norm.bias'])
    mlx_diffusion.unet.encoders[5].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[5].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.proj_in.bias'])
    mlx_diffusion.unet.encoders[5].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.encoders[5].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.encoders[5].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.encoders[5].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.encoders[5].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.encoders[5].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.encoders[5].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.encoders[5].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.encoders[5].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.encoders[5].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.encoders[5].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.encoders[5].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.encoders[5].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.encoders[5].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.encoders[5].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.encoders[5].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.encoders[5].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.encoders[5].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[5].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.5.1.proj_out.bias'])
    mlx_diffusion.unet.encoders[6].layers[0].weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.6.0.op.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[6].layers[0].bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.6.0.op.bias'])
    mlx_diffusion.unet.encoders[7].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.in_layers.0.weight'])
    mlx_diffusion.unet.encoders[7].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.in_layers.0.bias'])
    mlx_diffusion.unet.encoders[7].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[7].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.in_layers.2.bias'])
    mlx_diffusion.unet.encoders[7].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.emb_layers.1.weight'])
    mlx_diffusion.unet.encoders[7].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.emb_layers.1.bias'])
    mlx_diffusion.unet.encoders[7].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.out_layers.0.weight'])
    mlx_diffusion.unet.encoders[7].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.out_layers.0.bias'])
    mlx_diffusion.unet.encoders[7].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[7].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.out_layers.3.bias'])
    mlx_diffusion.unet.encoders[7].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[7].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.0.skip_connection.bias'])
    mlx_diffusion.unet.encoders[7].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.norm.weight'])
    mlx_diffusion.unet.encoders[7].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.norm.bias'])
    mlx_diffusion.unet.encoders[7].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[7].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.proj_in.bias'])
    mlx_diffusion.unet.encoders[7].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.encoders[7].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.encoders[7].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.encoders[7].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.encoders[7].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.encoders[7].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.encoders[7].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.encoders[7].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.encoders[7].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.encoders[7].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.encoders[7].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.encoders[7].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.encoders[7].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.encoders[7].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.encoders[7].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.encoders[7].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.encoders[7].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.encoders[7].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[7].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.7.1.proj_out.bias'])
    mlx_diffusion.unet.encoders[8].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.0.in_layers.0.weight'])
    mlx_diffusion.unet.encoders[8].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.0.in_layers.0.bias'])
    mlx_diffusion.unet.encoders[8].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[8].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.0.in_layers.2.bias'])
    mlx_diffusion.unet.encoders[8].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.0.emb_layers.1.weight'])
    mlx_diffusion.unet.encoders[8].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.0.emb_layers.1.bias'])
    mlx_diffusion.unet.encoders[8].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.0.out_layers.0.weight'])
    mlx_diffusion.unet.encoders[8].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.0.out_layers.0.bias'])
    mlx_diffusion.unet.encoders[8].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[8].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.0.out_layers.3.bias'])
    mlx_diffusion.unet.encoders[8].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.norm.weight'])
    mlx_diffusion.unet.encoders[8].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.norm.bias'])
    mlx_diffusion.unet.encoders[8].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[8].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.proj_in.bias'])
    mlx_diffusion.unet.encoders[8].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.encoders[8].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.encoders[8].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.encoders[8].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.encoders[8].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.encoders[8].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.encoders[8].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.encoders[8].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.encoders[8].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.encoders[8].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.encoders[8].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.encoders[8].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.encoders[8].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.encoders[8].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.encoders[8].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.encoders[8].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.encoders[8].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.encoders[8].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[8].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.8.1.proj_out.bias'])
    mlx_diffusion.unet.encoders[9].layers[0].weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.9.0.op.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[9].layers[0].bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.9.0.op.bias'])
    mlx_diffusion.unet.encoders[10].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.10.0.in_layers.0.weight'])
    mlx_diffusion.unet.encoders[10].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.10.0.in_layers.0.bias'])
    mlx_diffusion.unet.encoders[10].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.10.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[10].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.10.0.in_layers.2.bias'])
    mlx_diffusion.unet.encoders[10].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.10.0.emb_layers.1.weight'])
    mlx_diffusion.unet.encoders[10].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.10.0.emb_layers.1.bias'])
    mlx_diffusion.unet.encoders[10].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.10.0.out_layers.0.weight'])
    mlx_diffusion.unet.encoders[10].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.10.0.out_layers.0.bias'])
    mlx_diffusion.unet.encoders[10].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.10.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[10].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.10.0.out_layers.3.bias'])
    mlx_diffusion.unet.encoders[11].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.11.0.in_layers.0.weight'])
    mlx_diffusion.unet.encoders[11].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.11.0.in_layers.0.bias'])
    mlx_diffusion.unet.encoders[11].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.11.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[11].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.11.0.in_layers.2.bias'])
    mlx_diffusion.unet.encoders[11].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.11.0.emb_layers.1.weight'])
    mlx_diffusion.unet.encoders[11].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.11.0.emb_layers.1.bias'])
    mlx_diffusion.unet.encoders[11].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.11.0.out_layers.0.weight'])
    mlx_diffusion.unet.encoders[11].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.11.0.out_layers.0.bias'])
    mlx_diffusion.unet.encoders[11].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.input_blocks.11.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.encoders[11].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.input_blocks.11.0.out_layers.3.bias'])
    mlx_diffusion.unet.bottleneck.layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.0.in_layers.0.weight'])
    mlx_diffusion.unet.bottleneck.layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.0.in_layers.0.bias'])
    mlx_diffusion.unet.bottleneck.layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.bottleneck.layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.0.in_layers.2.bias'])
    mlx_diffusion.unet.bottleneck.layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.0.emb_layers.1.weight'])
    mlx_diffusion.unet.bottleneck.layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.0.emb_layers.1.bias'])
    mlx_diffusion.unet.bottleneck.layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.0.out_layers.0.weight'])
    mlx_diffusion.unet.bottleneck.layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.0.out_layers.0.bias'])
    mlx_diffusion.unet.bottleneck.layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.bottleneck.layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.0.out_layers.3.bias'])
    mlx_diffusion.unet.bottleneck.layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.norm.weight'])
    mlx_diffusion.unet.bottleneck.layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.1.norm.bias'])
    mlx_diffusion.unet.bottleneck.layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.bottleneck.layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.1.proj_in.bias'])
    mlx_diffusion.unet.bottleneck.layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.bottleneck.layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.bottleneck.layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.bottleneck.layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.bottleneck.layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.bottleneck.layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.bottleneck.layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.bottleneck.layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.bottleneck.layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.bottleneck.layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.bottleneck.layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.bottleneck.layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.bottleneck.layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.bottleneck.layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.bottleneck.layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.bottleneck.layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.bottleneck.layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.bottleneck.layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.bottleneck.layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.1.proj_out.bias'])
    mlx_diffusion.unet.bottleneck.layers[2].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.2.in_layers.0.weight'])
    mlx_diffusion.unet.bottleneck.layers[2].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.2.in_layers.0.bias'])
    mlx_diffusion.unet.bottleneck.layers[2].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.2.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.bottleneck.layers[2].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.2.in_layers.2.bias'])
    mlx_diffusion.unet.bottleneck.layers[2].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.2.emb_layers.1.weight'])
    mlx_diffusion.unet.bottleneck.layers[2].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.2.emb_layers.1.bias'])
    mlx_diffusion.unet.bottleneck.layers[2].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.2.out_layers.0.weight'])
    mlx_diffusion.unet.bottleneck.layers[2].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.2.out_layers.0.bias'])
    mlx_diffusion.unet.bottleneck.layers[2].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.middle_block.2.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.bottleneck.layers[2].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.middle_block.2.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[0].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[0].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[0].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[0].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[0].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[0].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[0].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[0].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[0].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[0].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[0].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[0].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.0.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[1].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[1].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[1].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[1].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[1].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[1].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[1].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[1].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[1].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[1].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[1].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[1].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.1.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[2].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[2].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[2].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[2].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[2].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[2].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[2].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[2].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[2].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[2].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[2].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[2].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[2].layers[1].conv.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.1.conv.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[2].layers[1].conv.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.2.1.conv.bias'])
    mlx_diffusion.unet.decoders[3].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[3].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[3].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[3].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[3].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[3].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[3].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[3].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[3].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[3].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[3].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[3].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[3].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.norm.weight'])
    mlx_diffusion.unet.decoders[3].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.norm.bias'])
    mlx_diffusion.unet.decoders[3].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[3].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.proj_in.bias'])
    mlx_diffusion.unet.decoders[3].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.decoders[3].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.decoders[3].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.decoders[3].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.decoders[3].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.decoders[3].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.decoders[3].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.decoders[3].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.decoders[3].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.decoders[3].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.decoders[3].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.decoders[3].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.decoders[3].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.decoders[3].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.decoders[3].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.decoders[3].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.decoders[3].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.decoders[3].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[3].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.3.1.proj_out.bias'])
    mlx_diffusion.unet.decoders[4].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[4].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[4].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[4].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[4].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[4].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[4].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[4].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[4].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[4].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[4].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[4].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[4].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.norm.weight'])
    mlx_diffusion.unet.decoders[4].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.norm.bias'])
    mlx_diffusion.unet.decoders[4].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[4].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.proj_in.bias'])
    mlx_diffusion.unet.decoders[4].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.decoders[4].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.decoders[4].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.decoders[4].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.decoders[4].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.decoders[4].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.decoders[4].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.decoders[4].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.decoders[4].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.decoders[4].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.decoders[4].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.decoders[4].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.decoders[4].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.decoders[4].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.decoders[4].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.decoders[4].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.decoders[4].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.decoders[4].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[4].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.4.1.proj_out.bias'])
    mlx_diffusion.unet.decoders[5].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[5].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[5].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[5].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[5].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[5].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[5].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[5].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[5].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[5].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[5].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[5].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[5].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.norm.weight'])
    mlx_diffusion.unet.decoders[5].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.norm.bias'])
    mlx_diffusion.unet.decoders[5].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[5].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.proj_in.bias'])
    mlx_diffusion.unet.decoders[5].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.decoders[5].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.decoders[5].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.decoders[5].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.decoders[5].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.decoders[5].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.decoders[5].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.decoders[5].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.decoders[5].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.decoders[5].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.decoders[5].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.decoders[5].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.decoders[5].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.decoders[5].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.decoders[5].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.decoders[5].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.decoders[5].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.decoders[5].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[5].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.1.proj_out.bias'])
    mlx_diffusion.unet.decoders[5].layers[2].conv.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.2.conv.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[5].layers[2].conv.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.5.2.conv.bias'])
    mlx_diffusion.unet.decoders[6].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[6].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[6].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[6].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[6].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[6].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[6].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[6].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[6].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[6].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[6].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[6].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[6].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.norm.weight'])
    mlx_diffusion.unet.decoders[6].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.norm.bias'])
    mlx_diffusion.unet.decoders[6].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[6].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.proj_in.bias'])
    mlx_diffusion.unet.decoders[6].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.decoders[6].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.decoders[6].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.decoders[6].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.decoders[6].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.decoders[6].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.decoders[6].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.decoders[6].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.decoders[6].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.decoders[6].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.decoders[6].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.decoders[6].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.decoders[6].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.decoders[6].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.decoders[6].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.decoders[6].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.decoders[6].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.decoders[6].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[6].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.6.1.proj_out.bias'])
    mlx_diffusion.unet.decoders[7].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[7].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[7].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[7].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[7].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[7].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[7].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[7].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[7].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[7].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[7].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[7].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[7].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.norm.weight'])
    mlx_diffusion.unet.decoders[7].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.norm.bias'])
    mlx_diffusion.unet.decoders[7].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[7].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.proj_in.bias'])
    mlx_diffusion.unet.decoders[7].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.decoders[7].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.decoders[7].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.decoders[7].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.decoders[7].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.decoders[7].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.decoders[7].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.decoders[7].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.decoders[7].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.decoders[7].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.decoders[7].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.decoders[7].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.decoders[7].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.decoders[7].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.decoders[7].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.decoders[7].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.decoders[7].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.decoders[7].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[7].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.7.1.proj_out.bias'])
    mlx_diffusion.unet.decoders[8].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[8].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[8].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[8].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[8].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[8].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[8].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[8].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[8].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[8].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[8].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[8].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[8].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.norm.weight'])
    mlx_diffusion.unet.decoders[8].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.norm.bias'])
    mlx_diffusion.unet.decoders[8].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[8].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.proj_in.bias'])
    mlx_diffusion.unet.decoders[8].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.decoders[8].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.decoders[8].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.decoders[8].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.decoders[8].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.decoders[8].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.decoders[8].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.decoders[8].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.decoders[8].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.decoders[8].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.decoders[8].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.decoders[8].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.decoders[8].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.decoders[8].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.decoders[8].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.decoders[8].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.decoders[8].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.decoders[8].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[8].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.1.proj_out.bias'])
    mlx_diffusion.unet.decoders[8].layers[2].conv.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.2.conv.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[8].layers[2].conv.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.8.2.conv.bias'])
    mlx_diffusion.unet.decoders[9].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[9].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[9].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[9].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[9].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[9].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[9].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[9].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[9].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[9].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[9].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[9].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[9].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.norm.weight'])
    mlx_diffusion.unet.decoders[9].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.norm.bias'])
    mlx_diffusion.unet.decoders[9].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[9].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.proj_in.bias'])
    mlx_diffusion.unet.decoders[9].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.decoders[9].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.decoders[9].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.decoders[9].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.decoders[9].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.decoders[9].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.decoders[9].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.decoders[9].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.decoders[9].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.decoders[9].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.decoders[9].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.decoders[9].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.decoders[9].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.decoders[9].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.decoders[9].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.decoders[9].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.decoders[9].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.decoders[9].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[9].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.9.1.proj_out.bias'])
    mlx_diffusion.unet.decoders[10].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[10].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[10].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[10].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[10].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[10].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[10].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[10].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[10].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[10].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[10].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[10].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[10].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.norm.weight'])
    mlx_diffusion.unet.decoders[10].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.norm.bias'])
    mlx_diffusion.unet.decoders[10].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[10].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.proj_in.bias'])
    mlx_diffusion.unet.decoders[10].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.decoders[10].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.decoders[10].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.decoders[10].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.decoders[10].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.decoders[10].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.decoders[10].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.decoders[10].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.decoders[10].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.decoders[10].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.decoders[10].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.decoders[10].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.decoders[10].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.decoders[10].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.decoders[10].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.decoders[10].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.decoders[10].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.decoders[10].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[10].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.10.1.proj_out.bias'])
    mlx_diffusion.unet.decoders[11].layers[0].groupnorm_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.in_layers.0.weight'])
    mlx_diffusion.unet.decoders[11].layers[0].groupnorm_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.in_layers.0.bias'])
    mlx_diffusion.unet.decoders[11].layers[0].conv_feature.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.in_layers.2.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[11].layers[0].conv_feature.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.in_layers.2.bias'])
    mlx_diffusion.unet.decoders[11].layers[0].linear_time.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.emb_layers.1.weight'])
    mlx_diffusion.unet.decoders[11].layers[0].linear_time.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.emb_layers.1.bias'])
    mlx_diffusion.unet.decoders[11].layers[0].groupnorm_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.out_layers.0.weight'])
    mlx_diffusion.unet.decoders[11].layers[0].groupnorm_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.out_layers.0.bias'])
    mlx_diffusion.unet.decoders[11].layers[0].conv_merged.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.out_layers.3.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[11].layers[0].conv_merged.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.out_layers.3.bias'])
    mlx_diffusion.unet.decoders[11].layers[0].residual_layer.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.skip_connection.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[11].layers[0].residual_layer.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.0.skip_connection.bias'])
    mlx_diffusion.unet.decoders[11].layers[1].groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.norm.weight'])
    mlx_diffusion.unet.decoders[11].layers[1].groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.norm.bias'])
    mlx_diffusion.unet.decoders[11].layers[1].conv_input.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.proj_in.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[11].layers[1].conv_input.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.proj_in.bias'])
    mlx_diffusion.unet.decoders[11].layers[1].attention_1.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.weight'])
    mlx_diffusion.unet.decoders[11].layers[1].attention_1.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.bias'])
    mlx_diffusion.unet.decoders[11].layers[1].linear_geglu_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.0.proj.weight'])
    mlx_diffusion.unet.decoders[11].layers[1].linear_geglu_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.0.proj.bias'])
    mlx_diffusion.unet.decoders[11].layers[1].linear_geglu_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.weight'])
    mlx_diffusion.unet.decoders[11].layers[1].linear_geglu_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.bias'])
    mlx_diffusion.unet.decoders[11].layers[1].attention_2.q_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_q.weight'])
    mlx_diffusion.unet.decoders[11].layers[1].attention_2.k_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight'])
    mlx_diffusion.unet.decoders[11].layers[1].attention_2.v_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight'])
    mlx_diffusion.unet.decoders[11].layers[1].attention_2.out_proj.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.weight'])
    mlx_diffusion.unet.decoders[11].layers[1].attention_2.out_proj.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.bias'])
    mlx_diffusion.unet.decoders[11].layers[1].layernorm_1.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.weight'])
    mlx_diffusion.unet.decoders[11].layers[1].layernorm_1.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.bias'])
    mlx_diffusion.unet.decoders[11].layers[1].layernorm_2.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.weight'])
    mlx_diffusion.unet.decoders[11].layers[1].layernorm_2.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.bias'])
    mlx_diffusion.unet.decoders[11].layers[1].layernorm_3.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm3.weight'])
    mlx_diffusion.unet.decoders[11].layers[1].layernorm_3.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm3.bias'])
    mlx_diffusion.unet.decoders[11].layers[1].conv_output.weight = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.proj_out.weight'].permute(0,2,3,1))
    mlx_diffusion.unet.decoders[11].layers[1].conv_output.bias = mx.array(original_state_dict['model.diffusion_model.output_blocks.11.1.proj_out.bias'])
    mlx_diffusion.final.groupnorm.weight = mx.array(original_state_dict['model.diffusion_model.out.0.weight'])
    mlx_diffusion.final.groupnorm.bias = mx.array(original_state_dict['model.diffusion_model.out.0.bias'])
    mlx_diffusion.final.conv.weight = mx.array(original_state_dict['model.diffusion_model.out.2.weight'].permute(0,2,3,1))
    mlx_diffusion.final.conv.bias = mx.array(original_state_dict['model.diffusion_model.out.2.bias'])
    mlx_diffusion.unet.encoders[1].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.encoders[2].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.encoders[4].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.encoders[5].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.encoders[7].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.encoders[8].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.bottleneck.layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.decoders[3].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.decoders[4].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.decoders[5].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.decoders[6].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.decoders[7].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.decoders[8].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.decoders[9].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.decoders[10].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    mlx_diffusion.unet.decoders[11].layers[1].attention_1.in_proj.weight = mx.array(torch.cat((original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_q.weight'], original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_k.weight'], original_state_dict['model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_v.weight']), 0))
    return mlx_diffusion.eval()